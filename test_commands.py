# -*- coding: utf-8 -*-
"""test_commands.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/151T87WIQaWfhcHsgJyK0amn-2bdG9SIo
"""

import pytest
from unittest.mock import MagicMock
from commands import Light, LightOnCommand, LightOffCommand, RemoteControl

# Позитивные тесты
def test_light_on_command_executes_on():
    light = Light()
    light.on = MagicMock()
    command = LightOnCommand(light)
    command.execute()
    light.on.assert_called_once()

def test_light_off_command_executes_off():
    light = Light()
    light.off = MagicMock()
    command = LightOffCommand(light)
    command.execute()
    light.off.assert_called_once()

def test_remote_control_executes_command():
    light = Light()
    light.on = MagicMock()
    command = LightOnCommand(light)
    remote = RemoteControl()
    remote.set_command(command)
    remote.press_button()
    light.on.assert_called_once()

def test_undo_last_command():
    light = Light()
    light.on = MagicMock()
    light.off = MagicMock()
    command = LightOnCommand(light)
    remote = RemoteControl()
    remote.set_command(command)
    remote.press_button()
    remote.press_undo()
    light.off.assert_called_once()

# Негативные тесты
def test_press_button_without_command():
    remote = RemoteControl()
    with pytest.raises(ValueError, match="Command not set"):
        remote.press_button()

def test_undo_without_history():
    light = Light()
    remote = RemoteControl()
    command = LightOnCommand(light)
    remote.set_command(command)
    with pytest.raises(ValueError, match="No commands to undo"):
        remote.press_undo()

# Тест с mock'ом: имитируем, что Light недоступен
def test_command_with_mock_receiver_error():
    light = MagicMock()
    light.on.side_effect = Exception("Light is broken")
    command = LightOnCommand(light)
    with pytest.raises(Exception, match="Light is broken"):
        command.execute()